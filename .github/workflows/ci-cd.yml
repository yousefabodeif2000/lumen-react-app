name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: lumen_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      # --- PHP / Lumen setup ---
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
        working-directory: ./backend-lumen

      - name: Use CI environment
        run: cp .env.ci .env
        working-directory: ./backend-lumen

      - name: Run migrations
        run: php artisan migrate --force
        working-directory: ./backend-lumen

      - name: Run seeders
        run: php artisan db:seed --force
        working-directory: ./backend-lumen

      - name: Run PHPUnit tests
        run: php ./vendor/bin/phpunit --configuration phpunit.xml
        working-directory: ./backend-lumen

      - name: Start Lumen server
        working-directory: ./backend-lumen
        run: php -S 127.0.0.1:8000 -t public &

      - name: Wait for Lumen to be ready
        run: |
          until curl -s http://127.0.0.1:8000/api/health; do
            sleep 1
          done

      # --- Node.js setup ---
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: lumen-react-app/backend-node/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('lumen-react-app/backend-node/package-lock.json') }}

      - name: Install Node dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --legacy-peer-deps
        working-directory: ./backend-node

      - name: Fix permissions for binaries
        run: chmod -R u+x node_modules/.bin
        working-directory: ./backend-node

      - name: Run Node Jest tests
        run: npx jest --runInBand
        working-directory: ./backend-node
